List challenge problems completed as part of the lab 3 handin, as well
as the problem number.  If you worked any previous lab challenges and
submitted them with this lab, list them here, along with the lab number.

---------------------------------------------------------------------
Challenge 1 of Lab 3

We modify the macros in trapentry.S to automatically generate a entry
table for trap.c to use.
When using TRAPHANDLER and TRAPHANDLER_NOEC, the macros add a new entry
to our global symbol 'entry_array' in the data segment. We also add
a padding at the end of entry_array to indicate 'end of array'.
Now in trap_init(), we only need to use a for-loop to install all the
handlers.

---------------------------------------------------------------------
Challenge 2 of Lab 3

Add simple debug command s (single step), c (continue) in the directory
'kern/disasm'.
It uses TF (trap flag) of EFLAGS to provide signle step and continue
function.

Test: We add breakpoint test program along with the interrupt-driven
      IDE device access test example. Type 'idetest' in the monitor,
      and you will encounter a breakpoint. You can type s to single
      step or c to continue. We have no time to do the command u
      (disassemble the opcodes).

